%% Basic template for Affymetrix microarray analysis, rawdata quality control and preprocessing, for gene ST microarrays
%% Julien Lelong, Daniel Bindreither and Johannes Rainer.

<<results=hide,echo=FALSE>>=

## set up.
options( stringsAsFactors=FALSE )
options( useFancyQuotes=FALSE )

## these are required to load the correct CDF package for the microarray!!!
## note: for Mouse Gene ST 1.0 use mogene10stv1 below.
ENSEMBL_VERSION <- "75"
CDFNAME<- paste( "hugene10stv1", sub( ENSEMBL_VERSION, pattern="_", replacement="" ), sep="" )
## annotation file and host:
ANNOT_HOST <- paste( "http://dmp.i-med.ac.at/cdf/", ENSEMBL_VERSION, "/", sep="" )
ANNOT_FILE <- "annot_hugene_transcriptlevel_"   ## change to annot_mogene_transcriptlevel_ for Mouse Gene ST microarrays!

## path where images should be saved to
IMAGE_PATH <- paste( "images/rawdata/" , sep="" )
if( !file.exists( IMAGE_PATH ) ){ dir.create( IMAGE_PATH, recursive=TRUE ) }
RDATA_PATH <- paste( "data/RData/" , sep="" )
if( !file.exists( RDATA_PATH ) ){ dir.create( RDATA_PATH, recursive=TRUE ) }

PS <- 6

set.seed( 18011977 )


@

\SweaveOpts{eps=FALSE}
\SweaveOpts{keep.source=FALSE}

\chapter{Raw data, quality control and data preprocessing}\label{chapter:rawdata}

In the first Section (\ref{section:rawdata}) of this chapter we are loading the raw microarray data and are performing quality controls of the raw data signals. After that we perform the pre-processing of the microarrays in Section \ref{section:preprocessing} using the GCRMA method \cite{Wu:2004whb}. The whole analysis is performed in R employing software packages from the Bioconductor project \cite{Gentleman:2004ju}.

Loading all required packages.

\begin{scriptsize}
<<results=hide>>=
# required packages.
library( Biobase )
library( affy )
library( xtable )
library( affyPLM )
library( generalgcrma )
library( RColorBrewer )
library( unsoRted )
library( WriteXLS )

@
\end{scriptsize}

\section{Raw data and quality assessment}\label{section:rawdata}

Loading the raw data from the CEL files (raw signal intensities of each microarray are stored in one CEL file).

\begin{scriptsize}
<<results=hide>>=
# get the raw data affybatch
pd <- read.AnnotatedDataFrame( "data/txt/phenodata.txt" )
Chips.raw <- ReadAffy( filenames=paste( "data/CEL/", sampleNames( pd ), sep="" ), phenoData=pd )
## defining the color for the different group(s).
Colors.group <- brewer.pal( max( c( length( unique( Chips.raw$group ) ), 3 ) ) , "Set1" )[ 1:length( unique( Chips.raw$group ) ) ]
names( Colors.group ) <- unique( Chips.raw$group )

@
\end{scriptsize}

The microarrays and corresponding samples are listed below.

<<results=tex, echo=FALSE>>=

T <- cbind( cel_file=sampleNames( Chips.raw ), name=Chips.raw$name, group=Chips.raw$groups )
rownames( T ) <- 1:nrow( T )
T <- xtable( T, caption="CEL files and corresponding samples." )
print(T, table.placement="H", size="small" )

@

Quality controls of the raw data are based on comparisons of the signal distributions of the individual microarrays. Basic quality controls include density plots and boxplots comparing the raw signals that should, ideally, be similar between all microarrays within an experiment. Any differences between raw signals will be adjusted by the normalization step of the microarray data pre-processing.


<<results=hide, echo=FALSE>>=

fg.idx <- unique( unlist( pmindex( Chips.raw ) ) )
bg.idx <- unique( unlist( pmindex( Chips.raw )[ grep( names( pmindex( Chips.raw ) ), pattern="bg" ) ] ) )
fg.idx <- fg.idx[ !( fg.idx %in% bg.idx ) ]

WIDTH <- 16
FILE <- paste( IMAGE_PATH, "rawdata-density.png", sep="" )
png( file=FILE, width=WIDTH, height=8, units="cm", res=600, pointsize=PS )
par( mar=c( 4.5, 4.5, 3, 1 ), cex.lab=1.5, cex.axis=1.5, mfrow=c( 1, 2 ) )
plotDensity( log2( exprs( Chips.raw )[ fg.idx, ] ), main="FG probes", xlab=expression(log[2]~expression), col=paste0( Colors.group[ Chips.norm$group ], "80" ), lwd=2, lty=1, xlim=c( 4, 15 ) )
plotDensity( log2( exprs( Chips.raw )[ bg.idx, ] ), main="BG probes", xlab=expression(log[2]~expression), col=paste0( Colors.group[ Chips.norm$group ], "80" ), lwd=2, lty=1, xlim=c( 4, 15 ) )
legend( "topright", lwd=2, lty=1, col=Colors.group, legend=names( Colors.group ), cex=1.5 )
dev.off()

@

\begin{figure}[H]
\begin{center}
\includegraphics[width=\Sexpr{WIDTH}cm]{\Sexpr{FILE}}
\caption{Raw intensity distribution for all microarrays in the experiment (each line represents one microarray). Shown are signal distribution of foreground (left) and background probes (right).}
\label{fig:rawdata.density}
\end{center}
\end{figure}

<<results=hide, echo=FALSE>>=

WIDTH <- 16
FILE <- paste( IMAGE_PATH, "rawdata-boxplot.png", sep="" )
png( file=FILE, width=WIDTH, height=8, units="cm", res=600, pointsize=PS )
par( mar=c( 6, 4.5, 3, 1 ), cex.lab=1.5, cex.axis=1.5, mfrow=c( 1, 2 ) )
boxplot( log2( exprs( Chips.raw )[ fg.idx, ] ), main="FG probes", xaxt="n", ylab=expression(log[2]~expression), col=Colors.group[ Chips.norm$group ], ylim=c( 4, 15 ), range=0 )
par( cex.axis=0.8 )
axis( side=1, labels=Chips.raw$name, at=1:length( Chips.raw$name ), las=2 )
## bg
par( cex.axis=1.5 )
boxplot( log2( exprs( Chips.raw )[ bg.idx, ] ), main="BG probes", xaxt="n", ylab=expression(log[2]~expression), col=Colors.group[ Chips.norm$group ], ylim=c( 4, 15 ), range=0 )
par( cex.axis=0.8 )
axis( side=1, labels=Chips.raw$name, at=1:length( Chips.raw$name ), las=2 )
dev.off()

@

\begin{figure}[H]
\begin{center}
\includegraphics[width=\Sexpr{WIDTH}cm]{\Sexpr{FILE}}
\caption{Boxplots representing the raw signal distribution per microarray.}
\label{fig:rawdata.boxplot}
\end{center}
\end{figure}

!!!SOME DESCRIPTION OF THE PLOTS ABOVE.!!!



\section{Microarray data pre-processing}\label{section:preprocessing}


Next we are employing the GCRMA algorithm \cite{Wu:2004whb} to perform the pre-processing of the raw microarray data. GCRMA performs, in addition to the optical background adjustment, also an adjustment for potential non-specific binding based on the sequence of the individual probes and signal measured by background probes (i.e. probes that are not complementary to any known mRNA). This step in the pre-processing increases the dynamic range of the microarray facilitating the detection of differentially expressed genes in the low intensity range. The data is subsequently normalized using the quantiles algorithm and the individual probe intensities within a probe set are summarized to the probe set's expression value.

For this type of microarray (ST GeneChips) we defined the probe to probe set assignment by aligning all 25nt long probe sequences on the microarray to the genome and transcriptome (detailed in \cite{Rainer:2011jy}, with the addition, that probe sequences are aligned also against the mRNA sequences). All probes targeting the same transcript have been assigned to one probe set. Thus, after pre-processing, we get an expression value for each of these transcript probe sets. However, since transcripts of the same gene share a large portion of their exons, such transcript probe sets of the same gene will also have overlapping probe composition. Therefore a single representative transcript probe set will be selected for each gene. The selection process prioritizes protein coding transcripts (for protein coding genes) and probe sets with a combination of high variance and high expression across all samples. Also, probe sets with a larger number of probes will be preferred, since they are less susceptible to noise.


The code below performs the GCRMA pre-processing.


\begin{scriptsize}
<<results=hide>>=

data( affinity.spline.coefs.exon )
Chips.norm <- gcrma.adjust.nomm( Chips.raw, optical.correct=TRUE,
                                affinity.spline.coefs=affinity.spline.coefs.exon,
                                normalize.quantiles=TRUE, summarize=TRUE,
                                summarize.method="plm",
                                GSB.adjust=FALSE, mc.cores=getOption( "mc.cores" ) )

@
\end{scriptsize}

As detailed above, we have to select a single representative transcript probe set for each gene. We calculate for each probe sets a score based on the average expression and variation of expression across all samples and then choose the transcript probe set with the highest score.

\begin{scriptsize}
<<results=hide>>=
## load the annotation.
load.from.http( paste0( ANNOT_HOST, ANNOT_FILE,
                       ENSEMBL_VERSION, ".Rdata" ) )
## selecting the representative probe set based on the max mean*sd of expression
rep.ps <- getRepPS( Chips.norm, annot=annot,
                   FUN=function( z ){
                       return( mean( z ) * sd( z ) )
                   },
                   prefer.protein.coding=TRUE, probe.count.cut=c( 9, 7, 5 ) )
Chips.norm <- Chips.norm[ rep.ps, ]
## saving the data
save( Chips.norm, file=paste0( RDATA_PATH, "Chips.norm.RData" ), compress="xz" )

@
\end{scriptsize}

Next we plot the signal distribution after pre-processing.

<<results=hide, echo=FALSE>>=

WIDTH <- 16
FILE <- paste( IMAGE_PATH, "preprocessed-denstiy.png", sep="" )
png( file=FILE, width=WIDTH, height=8, units="cm", res=600, pointsize=PS )
par( mar=c( 4.5, 4.5, 2, 1 ), cex.lab=1.5, cex.axis=1.5 )
plotDensity( exprs( Chips.norm ), lwd=2, lty=1, col=Colors.group[ Chips.norm$group ], main="Pre-processed signal", xlab=expression(log[2]~expression) )
dev.off()

@

\begin{figure}[H]
\begin{center}
\includegraphics[width=\Sexpr{WIDTH}cm]{\Sexpr{FILE}}
\caption{Signal distribution for all microarrays after pre-processing.}
\label{fig:preprocessed.density}
\end{center}
\end{figure}

<<results=hide, echo=FALSE>>=

WIDTH <- 10
FILE <- paste( IMAGE_PATH, "preprocessed-boxplot.png", sep="" )
png( file=FILE, width=WIDTH, height=8, units="cm", res=600, pointsize=PS )

par( mar=c( 8, 4.5, 2, 1 ), cex.lab=1.5, cex.axis=1.5 )
boxplot( exprs( Chips.norm ), xaxt="n", ylab=expression(log[2]~expression), col=Colors.group[ Chips.raw$group ], range=0 )
axis( side=1, labels=Chips.raw$name, at=1:length( Chips.raw$name ), las=2 )
dev.off()

@

\begin{figure}[H]
\begin{center}
\includegraphics[width=\Sexpr{WIDTH}cm]{\Sexpr{FILE}}
\caption{Boxplots representing the preprocessed signal distribution per microarray.}
\label{fig:preprocessed.boxplot}
\end{center}
\end{figure}


!!!SOME DESCRIPTION OF THE PLOTS ABOVE.!!!

At last we are performing a principal component analysis (PCA) to group the samples based on their gene expression profile.

\begin{scriptsize}
<<results=hide>>=

pc <- prcomp( t( exprs( Chips.norm ) ), scale=FALSE, center=TRUE )

@
\end{scriptsize}

<<results=hide,echo=FALSE>>=

WIDTH <- 16
FILE <- paste( IMAGE_PATH, "preprocessed-PCA.png", sep="" )
png( file=FILE, width=WIDTH, height=WIDTH/2, units="cm", res=600, pointsize=5 )
par( mfrow=c( 1, 2 ), cex.axis=1.5, cex.lab=1.5 )
## pc1 vs 2
plot( pc$x[ , 1 ], pc$x[ ,2 ], xlab="PC1", ylab="PC2", pch=NA, main="" )
abline( h=0, v=0, col="grey", lty=3 )
text( pc$x[ , 1 ], pc$x[ ,2 ], label=Chips.norm$name, col=paste0( Colors.group[ Chips.norm$group ], "80" ), cex=1 )
## pc3 vs 4
plot( pc$x[ , 3 ], pc$x[ ,4 ], xlab="PC3", ylab="PC4", pch=NA, main="" )
abline( h=0, v=0, col="grey", lty=3 )
text( pc$x[ , 3 ], pc$x[ ,4 ], label=Chips.norm$name, col=paste0( Colors.group[ Chips.norm$group ], "80" ), cex=1 )
dev.off()


@

\begin{figure}[H]
\begin{center}
\includegraphics[width=\Sexpr{WIDTH}cm]{\Sexpr{FILE}}
\caption{PCA analysis of the preprocessed data. PC1 and PC2 (left) and PC3 against PC4 (right).}
\label{fig:rawdata.PCA}
\end{center}
\end{figure}

!!!DESCRIPTION OF THE FIGURE ABOVE!!!


\noindent\rule{\linewidth}{1pt}
R version information:

\begin{scriptsize}
<<results=tex,echo=FALSE>>=

date()
toLatex( sessionInfo() )

@
\end{scriptsize}





